name: Create Changelog PR for Renovate Updates

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, closed]
    branches-ignore:
      - 'changelog/**'

jobs:
  create-changelog-pr:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'renovate/')

    steps:
      - name: Checkout target branch
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Check if changelog branch already exists
        id: check_branch
        run: |
          if git ls-remote --exit-code --heads origin changelog/aggregate; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create or switch to changelog branch
        run: |
          if [ "${{ steps.check_branch.outputs.exists }}" == "true" ]; then
            git fetch origin changelog/aggregate
            git checkout changelog/aggregate
          else
            git checkout -b changelog/aggregate
          fi

      - name: Generate changelog entry
        run: |
          mkdir -p changes
          
          BRANCH_NAME="${{ github.head_ref }}"
          PACKAGE_NAME=${BRANCH_NAME#renovate/}
          
          PR_BODY=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" \
            | jq -r '.body')
          
          PACKAGE_INFO=$(echo "$PR_BODY" | grep -o -P '(?<=## Release Notes.*\n\n).*' | head -n 1 || echo "")
          
          if [ -n "$PACKAGE_INFO" ]; then
            FILENAME="Changed [Dependencies] ${PACKAGE_INFO}"
          else
            FILENAME="Changed [Dependencies] Updated ${PACKAGE_NAME}"
          fi
          
          FILEPATH="changes/${FILENAME}"
          touch "$FILEPATH"

          echo "Created changelog entry: $FILEPATH"

      - name: Commit changelog entry
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions Bot"

          git add changes/
          git commit -m "Add changelog entry for dependency update [skip ci]" || echo "No changes to commit"
          git push origin changelog/aggregate

      - name: Check if changelog PR already exists
        id: check_pr
        run: |
          PR_NUMBER=$(gh pr list --head changelog/aggregate --json number --jq '.[0].number')
          if [ -n "$PR_NUMBER" ]; then
            echo "pr_exists=true" >> $GITHUB_OUTPUT
            echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          else
            echo "pr_exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create changelog PR if not exists
        if: steps.check_pr.outputs.pr_exists == 'false'
        run: |
          gh pr create --title "Changelog for dependency updates" \
                       --body "Aggregated changelog for recent dependency updates." \
                       --base main \
                       --head changelog/aggregate \
                       --label "changelog"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  auto-merge-changelog:
    if: github.event.action == 'closed' && startsWith(github.head_ref, 'renovate/') && github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Check for open changelog PR
        id: check_pr
        run: |
          PR_NUMBER=$(gh pr list --head changelog/aggregate --json number --jq '.[0].number')
          if [ -n "$PR_NUMBER" ]; then
            echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge changelog PR if exists
        if: steps.check_pr.outputs.pr_number != ''
        run: |
          gh pr merge ${{ steps.check_pr.outputs.pr_number }} --squash --admin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
